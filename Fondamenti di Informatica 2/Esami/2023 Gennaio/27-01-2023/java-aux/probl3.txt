Algoritmo bstIntersec(Tree T1, Tree T2):

    List l1, l2 = liste vuote
    toSortedList(T1, l1)        // tempo O(n1)
    toSortedList(T2, l2)        // tempo O(n2)
    return intersec(l1, l2)     // tempo O(n1+n2)

---------------------------------------------------------------------

Algoritmo toSortedList(Tree T, List l):     // tempo O(n)

    if T Ã¨ vuoto then:
        return
    toSortedList(T.left, l)
    inserisce T.root in l
    toSortedList(T.right, l)
    return

---------------------------------------------------------------------

Algoritmo intersec(List l1, List l2) :      // tempo O(n1 + n2)

    List l = lista vuota
    int i = 0, j = 0
    while (i < n1 and j < n2) do:
        while l1[i] < l2[j] and i < n1 do:
            i++
        while l1[i] > l2[j] and j < n2 do:
            j++
        inserisce l1[i] = l2[j] in l1
        i++
        j++

